
<nav class="navbar navbar-default">
  <div class="container-fluid">
    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse">
      <ul class="nav navbar-nav">
        <li class="dropdown">
            <a class="dropdown-toggle" id="dropdownBatchActionButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            {{ 'label.batchActions.title'|trans }}
            <span class="caret"></span>
            </a>
              
            <ul class="dropdown-menu" aria-labelledby="dropdownBatchActionButton">
                {% for action, actiondata in _entity_config.list.batchs %}
                    {% if actiondata.role is null or is_granted(actiondata.role) %}
                            <li><a href="javascript:void(0)" 
                                {% if batch_forms[actiondata.name] is defined %}
                                    onclick="showBatchForm('{{actiondata.name}}')" 
                                {% else %}
                                    onclick="return doBulkAction('{{ path('easyadmin', app.request.query|merge({ action: "batch", name: action })|merge(actiondata.params)) }}')" 
                                {% endif %}
                                >
                                {% if actiondata.icon is not null %}
                                    <i class="fa fa-{{ actiondata.icon }} }}"></i> {{ (actiondata.label)|trans }}
                                {% else %}
                                    {{ (actiondata.label)|trans }}
                                {% endif %}
                            </a></li>
                    {% endif %}
                {% endfor %}
            </ul>
        </li>
      </ul>
      <div class="navbar-form navbar-left">
        {% for action, actiondata in _entity_config.list.batchs %}
            {% if (actiondata.role is null or is_granted(actiondata.role)) and batch_forms[actiondata.name] is defined %}
            <div  id="batch_{{actiondata.name}}" class="hidden">
                <div class="batchForms form-group form-inline">
                    {{ form_widget(batch_forms[actiondata.name]) }}
                </div>
                <button class="btn btn-default"  onclick="return doBulkAction('{{ path('easyadmin', app.request.query|merge({ action: 'batch', name: action })|merge(actiondata.params)) }}')" >{{'batch.execute'|trans}}</button>
            </div>
            {% endif %}
        {% endfor %}
      </div>
    </div><!-- /.navbar-collapse -->
  </div>
</nav>

<script>
    function doBulkAction(url) {
        document.bulkform.action = url;
        document.bulkform.submit();

        return false;
    }


    function validateBulkCheckboxes() {
        var allChecked = true;
        var oneChecked = false;

        var checkboxes = document.querySelectorAll('.js-bulk-checkbox');
        for (var i=0; i<checkboxes.length; i++) {
            var cb = checkboxes[i];
            if (cb.checked == true) {
                oneChecked = true;
            } else {
                allChecked = false;
            }
        }

        $('#js-all-bulk-checkbox').prop('checked', allChecked);

        if (oneChecked) {
            $('.js-bulk-button').removeClass('disabled');
        } else {
            $('.js-bulk-button').addClass('disabled');
        }
    }

    function showBatchForm(name) {
        $('.js-bulk-button').addClass('hidden');
        if(name){
                $('#batch_'+name).removeClass('hidden');
        }

    }

    var allCheckbox = document.getElementById('js-all-bulk-checkbox');
    allCheckbox.onchange = function() {
        if (allCheckbox.checked == true) {
            $('.js-bulk-checkbox').prop('checked', true);
            $('.js-bulk-button').removeClass('disabled');
            if($('#all-selection').val() == 0) {
                $('.js-all-selection-none').removeClass('hidden');
            } else {
                $('.js-all-selection-active').removeClass('hidden');
            }
        } else {
            $('.js-bulk-checkbox').prop('checked', false);
            $('.js-bulk-button').addClass('disabled');
            $('.js-all-selection').addClass('hidden');
        }
    };

    $( ".js-all-selection" ).click(function() {
        if($('#all-selection').val() == 1) {
            $('#all-selection').val(0);
            $('.js-all-selection-none').removeClass('hidden');
            $('.js-all-selection-active').addClass('hidden');
        } else {
            $('#all-selection').val(1);
            $('.js-all-selection-none').addClass('hidden');
            $('.js-all-selection-active').removeClass('hidden');
        }
        
    });

    var checkboxes = document.querySelectorAll('.js-bulk-checkbox');
    for (var key in checkboxes) {
        checkboxes[key].onchange = validateBulkCheckboxes;
    }
</script>